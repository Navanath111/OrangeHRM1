<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-03T11:47:13 IST" name="Suite" finished-at="2023-04-03T11:48:11 IST" duration-ms="58156">
    <groups>
    </groups>
    <test started-at="2023-04-03T11:47:13 IST" name="Chrome" finished-at="2023-04-03T11:48:11 IST" duration-ms="58156">
      <class name="testPackage.LogInTestClass">
        <test-method signature="VerifyLoginFunctionalityWithCorrectData()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="VerifyLoginFunctionalityWithCorrectData" finished-at="2023-04-03T11:48:11 IST" duration-ms="16" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebElement.sendKeys(java.lang.CharSequence[])" because "this.username" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.sendKeys(java.lang.CharSequence[])" because "this.username" is null
at pomPackage1.LogInPage.enterUsername(LogInPage.java:33)
at testPackage.LogInTestClass.VerifyLoginFunctionalityWithCorrectData(LogInTestClass.java:34)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginFunctionalityWithCorrectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="beforeMethod" finished-at="2023-04-03T11:48:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="afterMethod" finished-at="2023-04-03T11:48:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="aftermethod" finished-at="2023-04-03T11:48:11 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginFunctionalityWithCorrectData status=FAILURE method=LogInTestClass.VerifyLoginFunctionalityWithCorrectData()[pri:0, instance:testPackage.LogInTestClass@411f53a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="verifyLoginFunctionalitiesWithInCorrectData()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="verifyLoginFunctionalitiesWithInCorrectData" finished-at="2023-04-03T11:48:11 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at testPackage.LogInTestClass.verifyLoginFunctionalitiesWithInCorrectData(LogInTestClass.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFunctionalitiesWithInCorrectData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="beforeMethod" finished-at="2023-04-03T11:48:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="aftermethod" finished-at="2023-04-03T11:48:11 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginFunctionalitiesWithInCorrectData status=FAILURE method=LogInTestClass.verifyLoginFunctionalitiesWithInCorrectData()[pri:0, instance:testPackage.LogInTestClass@411f53a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="afterMethod" finished-at="2023-04-03T11:48:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testPackage.LogInTestClass@411f53a0]" started-at="2023-04-03T11:48:11 IST" name="afterClass" finished-at="2023-04-03T11:48:11 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testPackage.LogInTestClass -->
      <class name="testPackage.BaseClass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:testPackage.BaseClass@4218d6a3]" started-at="2023-04-03T11:47:13 IST" name="beforeTest" finished-at="2023-04-03T11:48:11 IST" duration-ms="57579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testPackage.BaseClass@4218d6a3]" started-at="2023-04-03T11:48:11 IST" name="aftertest" finished-at="2023-04-03T11:48:11 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testPackage.BaseClass -->
    </test> <!-- Chrome -->
  </suite> <!-- Suite -->
</testng-results>
